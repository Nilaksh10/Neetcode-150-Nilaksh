//Using HashMap =>(Time-O(N) Space-O(N))
class Solution {
    public boolean containsDuplicate(int[] nums) {
        int n = nums.length;
        HashSet <Integer> numbers = new HashSet<>();
        for(int i=0;i<n;i++){
            if(numbers.contains(nums[i])) return true;
            numbers.add(nums[i]);
        }
        return false;
    }
}
//Using Sort => Time-O(NlogN) Space-O(1)
class Solution {
    public boolean containsDuplicate(int[] nums) {
        int n = nums.length;
        Arrays.sort(nums);
        for(int i=0;i<n-1;i++){
            if(nums[i]==nums[i+1]){
                return true;
            }
        }
        return false;
    }
}